// Code generated by MockGen. DO NOT EDIT.
// Source: repository/paymentcoderepository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	model "pevin-golang-training-beginner/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPaymentCodeRepository is a mock of IPaymentCodeRepository interface.
type MockIPaymentCodeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIPaymentCodeRepositoryMockRecorder
}

// MockIPaymentCodeRepositoryMockRecorder is the mock recorder for MockIPaymentCodeRepository.
type MockIPaymentCodeRepositoryMockRecorder struct {
	mock *MockIPaymentCodeRepository
}

// NewMockIPaymentCodeRepository creates a new mock instance.
func NewMockIPaymentCodeRepository(ctrl *gomock.Controller) *MockIPaymentCodeRepository {
	mock := &MockIPaymentCodeRepository{ctrl: ctrl}
	mock.recorder = &MockIPaymentCodeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPaymentCodeRepository) EXPECT() *MockIPaymentCodeRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIPaymentCodeRepository) Create(ctx context.Context, p *model.PaymentCode) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, p)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIPaymentCodeRepositoryMockRecorder) Create(ctx, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIPaymentCodeRepository)(nil).Create), ctx, p)
}

// Get mocks base method.
func (m *MockIPaymentCodeRepository) Get(ctx context.Context, id string) (model.PaymentCode, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(model.PaymentCode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIPaymentCodeRepositoryMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIPaymentCodeRepository)(nil).Get), ctx, id)
}
