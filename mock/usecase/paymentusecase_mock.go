// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/paymentusecase.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/pevin/pevin-golang-training-beginner/model"
)

// MockIPaymentUseCase is a mock of IPaymentUseCase interface.
type MockIPaymentUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockIPaymentUseCaseMockRecorder
}

// MockIPaymentUseCaseMockRecorder is the mock recorder for MockIPaymentUseCase.
type MockIPaymentUseCaseMockRecorder struct {
	mock *MockIPaymentUseCase
}

// NewMockIPaymentUseCase creates a new mock instance.
func NewMockIPaymentUseCase(ctrl *gomock.Controller) *MockIPaymentUseCase {
	mock := &MockIPaymentUseCase{ctrl: ctrl}
	mock.recorder = &MockIPaymentUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPaymentUseCase) EXPECT() *MockIPaymentUseCaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIPaymentUseCase) Create(ctx context.Context, p *model.Payment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, p)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIPaymentUseCaseMockRecorder) Create(ctx, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIPaymentUseCase)(nil).Create), ctx, p)
}

// InitFromRequest mocks base method.
func (m *MockIPaymentUseCase) InitFromRequest(r *http.Request) (model.Payment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitFromRequest", r)
	ret0, _ := ret[0].(model.Payment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InitFromRequest indicates an expected call of InitFromRequest.
func (mr *MockIPaymentUseCaseMockRecorder) InitFromRequest(r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitFromRequest", reflect.TypeOf((*MockIPaymentUseCase)(nil).InitFromRequest), r)
}
