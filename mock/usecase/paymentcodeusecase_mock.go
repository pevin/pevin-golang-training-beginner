// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/paymentcodeusecase.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	model "github.com/pevin/pevin-golang-training-beginner/model"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPaymentCodeUseCase is a mock of IPaymentCodeUseCase interface.
type MockIPaymentCodeUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockIPaymentCodeUseCaseMockRecorder
}

// MockIPaymentCodeUseCaseMockRecorder is the mock recorder for MockIPaymentCodeUseCase.
type MockIPaymentCodeUseCaseMockRecorder struct {
	mock *MockIPaymentCodeUseCase
}

// NewMockIPaymentCodeUseCase creates a new mock instance.
func NewMockIPaymentCodeUseCase(ctrl *gomock.Controller) *MockIPaymentCodeUseCase {
	mock := &MockIPaymentCodeUseCase{ctrl: ctrl}
	mock.recorder = &MockIPaymentCodeUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPaymentCodeUseCase) EXPECT() *MockIPaymentCodeUseCaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIPaymentCodeUseCase) Create(ctx context.Context, p *model.PaymentCode) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, p)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIPaymentCodeUseCaseMockRecorder) Create(ctx, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIPaymentCodeUseCase)(nil).Create), ctx, p)
}

// Get mocks base method.
func (m *MockIPaymentCodeUseCase) Get(ctx context.Context, id string) (model.PaymentCode, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(model.PaymentCode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIPaymentCodeUseCaseMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIPaymentCodeUseCase)(nil).Get), ctx, id)
}

// InitFromRequest mocks base method.
func (m *MockIPaymentCodeUseCase) InitFromRequest(r *http.Request) (model.PaymentCode, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitFromRequest", r)
	ret0, _ := ret[0].(model.PaymentCode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InitFromRequest indicates an expected call of InitFromRequest.
func (mr *MockIPaymentCodeUseCaseMockRecorder) InitFromRequest(r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitFromRequest", reflect.TypeOf((*MockIPaymentCodeUseCase)(nil).InitFromRequest), r)
}
